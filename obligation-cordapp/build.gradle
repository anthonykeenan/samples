buildscript {
    ext.corda_release_group = 'com.r3.corda'
    ext.corda_release_version = '3.3-SNAPSHOT'
    ext.corda_gradle_plugins_version = '4.0.25'
    ext.kotlin_version = '1.2.50'
    ext.junit_version = '4.12'
    ext.quasar_version = '0.7.10'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
    }
}

allprojects {
    apply plugin: 'kotlin'

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda' }
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-dev' }
        // [Option 1: Add CORDA_ENTERPRISE_REPOSITORY_URL, CORDA_ENTERPRISE_REPOSITORY_USERNAME and CORDA_ENTERPRISE_REPOSITORY_PASSWORD environment variables that point to your company's maven repository which contain the enterprise binaries.]
        if (System.env.CORDA_ENTERPRISE_REPOSITORY_URL != null) {
            maven {
                url = System.getenv('CORDA_ENTERPRISE_REPOSITORY_URL')
                credentials {
                    username = System.getenv('CORDA_ENTERPRISE_REPOSITORY_USERNAME')
                    password = System.getenv('CORDA_ENTERPRISE_REPOSITORY_PASSWORD')
                }
            }
        }
        // [Option 2: Add Corda Enterprise binaries in ~/.m2/repository or C:\Documents and Settings\{your-username}\.m2]
        // [Option 3: uncomment the following block and tweak it to point to resolve Corda Enterprise dependencies against a custom path on your local file system.]
        // maven {
        //     url 'file://D:/path/to/local/directory'
        // }
    }
}